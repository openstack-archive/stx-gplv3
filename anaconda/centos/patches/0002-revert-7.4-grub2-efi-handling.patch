From 76cd2b90fd4e550e162bc8fc7e247ed2f4e6e310 Mon Sep 17 00:00:00 2001
From: Don Penney <don.penney@windriver.com>
Date: Fri, 17 Nov 2017 12:06:39 -0500
Subject: [PATCH] revert 7.4 grub2 efi handling

---
 pyanaconda/bootloader.py | 36 +++---------------------------------
 1 file changed, 3 insertions(+), 33 deletions(-)

diff --git a/pyanaconda/bootloader.py b/pyanaconda/bootloader.py
index 9db9cf3..24e8b56 100644
--- a/pyanaconda/bootloader.py
+++ b/pyanaconda/bootloader.py
@@ -1388,9 +1388,7 @@ class GRUB2(GRUB):
 
     """
     name = "GRUB2"
-    # grub2 is a virtual provides that's provided by grub2-pc, grub2-ppc64le,
-    # and all of the primary grub components that aren't grub2-efi-${EFIARCH}
-    packages = ["grub2", "grub2-tools"]
+    packages = ["grub2"]
     _config_file = "grub.cfg"
     _config_dir = "grub2"
     _passwd_file = "user.cfg"
@@ -1664,28 +1662,12 @@ class GRUB2(GRUB):
         return ret
 
 class EFIGRUB(GRUB2):
-    _packages32 = ["grub2-efi-ia32", "shim-ia32"]
-    _packages64 = ["grub2-efi-x64", "shim-x64"]
-    _packages_common = ["efibootmgr"]
+    packages = ["grub2-efi", "efibootmgr", "shim"]
     can_dual_boot = False
     stage2_is_valid_stage1 = False
     stage2_bootable = False
 
-    _is_32bit_firmware = False
-
-    @property
-    def _efi_binary(self):
-        if self._is_32bit_firmware:
-            return "\\shimia32.efi"
-        return "\\shimx64.efi"
-
-    @property
-    def packages(self):
-        if self._is_32bit_firmware:
-            return self._packages32 + self._packages_common + \
-                    super(EFIGRUB, self).packages
-        return self._packages64 + self._packages_common + \
-                super(EFIGRUB, self).packages
+    _efi_binary = "\\shim.efi"
 
     @property
     def _config_dir(self):
@@ -1695,15 +1677,6 @@ class EFIGRUB(GRUB2):
         super(EFIGRUB, self).__init__()
         self.efi_dir = 'BOOT'
 
-        try:
-            f = open("/sys/firmware/efi/fw_platform_size", "r")
-            value = f.readline().strip()
-        except IOError:
-            log.info("Reading /sys/firmware/efi/fw_platform_size failed, defaulting to 64-bit install.")
-            value = '64'
-        if value == '32':
-            self._is_32bit_firmware = True
-
     def efibootmgr(self, *args, **kwargs):
         if flags.imageInstall or flags.dirInstall:
             log.info("Skipping efibootmgr for image/directory install.")
@@ -1796,12 +1769,9 @@ class EFIGRUB(GRUB2):
         return True
 
 class Aarch64EFIGRUB(EFIGRUB):
-    _packages64 = ["grub2-efi-aa64", "shim-aa64"]
     _serial_consoles = ["ttyAMA", "ttyS"]
-    _efi_binary = "\\shimaa64.efi"
 
 class MacEFIGRUB(EFIGRUB):
-    packages = [ "grub2-tools-efi", "mactel-boot" ]
     def mactel_config(self):
         if os.path.exists(iutil.getSysroot() + "/usr/libexec/mactel-boot-setup"):
             rc = iutil.execInSysroot("/usr/libexec/mactel-boot-setup", [])
-- 
1.8.3.1

